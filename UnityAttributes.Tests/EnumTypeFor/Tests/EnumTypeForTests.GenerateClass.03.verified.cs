//HintName: ColorTestForClassWithT.g.cs
/// <auto-generated />

[System.Serializable]
public class ColorTestForClassWithT
{
    [UnityEngine.SerializeField] private ClassWithT<int> Red;
    [UnityEngine.SerializeField] private ClassWithT<int> Blue;
    [UnityEngine.SerializeField] private ClassWithT<int> Green;

    public ColorTestForClassWithT() { }

    public ColorTestForClassWithT(ClassWithT<int> red, ClassWithT<int> blue, ClassWithT<int> green)
    {
        this.Red = red;
        this.Blue = blue;
        this.Green = green;
    }

    public ClassWithT<int> Get(ColorTest key)
    {
        return key switch
        {
            ColorTest.Red => Red,
            ColorTest.Blue => Blue,
            ColorTest.Green => Green,
            _ => throw new System.ArgumentOutOfRangeException(nameof(key), key, null),
        };
    }

    public void Set(ColorTest key, ClassWithT<int> value)
    {
        switch (key)
        {
            case ColorTest.Red: Red = value; break;
            case ColorTest.Blue: Blue = value; break;
            case ColorTest.Green: Green = value; break;
            default: throw new System.ArgumentOutOfRangeException(nameof(key), key, null);
        }
    }

    public void Apply(ColorTest key, System.Func<ClassWithT<int>, ClassWithT<int>> func)
    {
        switch (key)
        {
            case ColorTest.Red: Red = func(Red); break;
            case ColorTest.Blue: Blue = func(Blue); break;
            case ColorTest.Green: Green = func(Green); break;
            default: throw new System.ArgumentOutOfRangeException(nameof(key), key, null);
        }
    }
}
